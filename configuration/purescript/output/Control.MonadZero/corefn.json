{"builtWith":"0.15.4","comments":[{"LineComment":" | This module is **deprecated** and will be removed in a future release."},{"LineComment":" |"},{"LineComment":" | The annihilation law witnessed by `MonadZero` is trivially satisfied by"},{"LineComment":" | lawful monads due to parametricity: while evaluating `empty >>= f`, the"},{"LineComment":" | function `f` canâ€™t ever be called, since that would require `empty` to"},{"LineComment":" | produce a value, which means that `empty >>= f` must be the same as"},{"LineComment":" | `empty >>= pure`, which by the monad laws is just `empty`."},{"LineComment":" |"},{"LineComment":" | Use `Monad` and `Alternative` constraints instead."}],"decls":[{"annotation":{"meta":{"metaType":"IsTypeClassConstructor"},"sourceSpan":{"end":[36,28],"start":[36,1]}},"bindType":"NonRec","expression":{"annotation":{"meta":{"metaType":"IsNewtype"},"sourceSpan":{"end":[36,28],"start":[36,1]}},"argument":"x","body":{"annotation":{"meta":null,"sourceSpan":{"end":[36,28],"start":[36,1]}},"type":"Var","value":{"identifier":"x","sourcePos":[0,0]}},"type":"Abs"},"identifier":"MonadZeroIsDeprecated$Dict"},{"annotation":{"meta":{"metaType":"IsTypeClassConstructor"},"sourceSpan":{"end":[46,69],"start":[46,1]}},"bindType":"NonRec","expression":{"annotation":{"meta":{"metaType":"IsNewtype"},"sourceSpan":{"end":[46,69],"start":[46,1]}},"argument":"x","body":{"annotation":{"meta":null,"sourceSpan":{"end":[46,69],"start":[46,1]}},"type":"Var","value":{"identifier":"x","sourcePos":[0,0]}},"type":"Abs"},"identifier":"MonadZero$Dict"},{"annotation":{"meta":null,"sourceSpan":{"end":[37,150],"start":[37,1]}},"bindType":"NonRec","expression":{"annotation":{"meta":null,"sourceSpan":{"end":[37,150],"start":[37,1]}},"argument":"$__unused","body":{"abstraction":{"annotation":{"meta":{"metaType":"IsNewtype"},"sourceSpan":{"end":[37,150],"start":[37,1]}},"type":"Var","value":{"identifier":"MonadZeroIsDeprecated$Dict","moduleName":["Control","MonadZero"]}},"annotation":{"meta":null,"sourceSpan":{"end":[37,150],"start":[37,1]}},"argument":{"annotation":{"meta":null,"sourceSpan":{"end":[37,150],"start":[37,1]}},"type":"Literal","value":{"literalType":"ObjectLiteral","value":[]}},"type":"App"},"type":"Abs"},"identifier":"monadZeroIsDeprecated"},{"annotation":{"meta":null,"sourceSpan":{"end":[48,43],"start":[48,1]}},"bindType":"NonRec","expression":{"abstraction":{"annotation":{"meta":{"metaType":"IsNewtype"},"sourceSpan":{"end":[48,43],"start":[48,1]}},"type":"Var","value":{"identifier":"MonadZero$Dict","moduleName":["Control","MonadZero"]}},"annotation":{"meta":null,"sourceSpan":{"end":[48,43],"start":[48,1]}},"argument":{"annotation":{"meta":null,"sourceSpan":{"end":[48,43],"start":[48,1]}},"type":"Literal","value":{"literalType":"ObjectLiteral","value":[["Monad0",{"annotation":{"meta":null,"sourceSpan":{"end":[48,43],"start":[48,1]}},"argument":"$__unused","body":{"annotation":{"meta":null,"sourceSpan":{"end":[0,0],"start":[0,0]}},"type":"Var","value":{"identifier":"monadArray","moduleName":["Control","Monad"]}},"type":"Abs"}],["Alternative1",{"annotation":{"meta":null,"sourceSpan":{"end":[48,43],"start":[48,1]}},"argument":"$__unused","body":{"annotation":{"meta":null,"sourceSpan":{"end":[0,0],"start":[0,0]}},"type":"Var","value":{"identifier":"alternativeArray","moduleName":["Control","Alternative"]}},"type":"Abs"}],["MonadZeroIsDeprecated2",{"annotation":{"meta":null,"sourceSpan":{"end":[48,43],"start":[48,1]}},"argument":"$__unused","body":{"annotation":{"meta":null,"sourceSpan":{"end":[48,43],"start":[48,1]}},"type":"Var","value":{"identifier":"undefined","moduleName":["Prim"]}},"type":"Abs"}]]}},"type":"App"},"identifier":"monadZeroArray"}],"exports":["monadZeroIsDeprecated","monadZeroArray"],"foreign":[],"imports":[{"annotation":{"meta":null,"sourceSpan":{"end":[24,43],"start":[24,1]}},"moduleName":["Control","Alt"]},{"annotation":{"meta":null,"sourceSpan":{"end":[48,43],"start":[11,1]}},"moduleName":["Control","Alternative"]},{"annotation":{"meta":null,"sourceSpan":{"end":[26,75],"start":[26,1]}},"moduleName":["Control","Applicative"]},{"annotation":{"meta":null,"sourceSpan":{"end":[27,61],"start":[27,1]}},"moduleName":["Control","Apply"]},{"annotation":{"meta":null,"sourceSpan":{"end":[28,78],"start":[28,1]}},"moduleName":["Control","Bind"]},{"annotation":{"meta":null,"sourceSpan":{"end":[48,43],"start":[11,1]}},"moduleName":["Control","Monad"]},{"annotation":{"meta":null,"sourceSpan":{"end":[48,43],"start":[11,1]}},"moduleName":["Control","MonadZero"]},{"annotation":{"meta":null,"sourceSpan":{"end":[30,40],"start":[30,1]}},"moduleName":["Control","Plus"]},{"annotation":{"meta":null,"sourceSpan":{"end":[32,73],"start":[32,1]}},"moduleName":["Data","Functor"]},{"annotation":{"meta":null,"sourceSpan":{"end":[48,43],"start":[11,1]}},"moduleName":["Prim"]},{"annotation":{"meta":null,"sourceSpan":{"end":[34,41],"start":[34,1]}},"moduleName":["Prim","TypeError"]}],"moduleName":["Control","MonadZero"],"modulePath":".spago/control/master/src/Control/MonadZero.purs","reExports":{"Control.Alt":["alt"],"Control.Alternative":["guard"],"Control.Applicative":["liftA1","pure","unless","when"],"Control.Apply":["apply"],"Control.Bind":["bind","ifM","join"],"Control.Monad":["ap","liftM1"],"Control.Plus":["empty"],"Data.Functor":["map","void"]},"sourceSpan":{"end":[48,43],"start":[11,1]}}